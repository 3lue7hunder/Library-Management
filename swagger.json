{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management API",
    "version": "2.0.0",
    "description": "A comprehensive API for managing library books and authors with authentication",
    "contact": {
      "name": "Library API Support",
      "email": "support@libraryapi.com"
    }
  },
  "servers": [
    {
      "url": "https://library-management-d0no.onrender.com",
      "description": "Production server (Render)"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Auto-generated user ID"
          },
          "username": {
            "type": "string",
            "description": "User's username",
            "example": "librarian1"
          },
          "email": {
            "type": "string",
            "description": "User's email address",
            "example": "librarian@library.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "securepassword123"
          },
          "role": {
            "type": "string",
            "description": "User's role",
            "example": "user"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "example": "librarian@library.com"
          },
          "password": {
            "type": "string",
            "example": "securepassword123"
          }
        }
      },
      "Author": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Auto-generated ID"
          },
          "name": {
            "type": "string",
            "description": "Author's full name",
            "example": "J.K. Rowling"
          },
          "email": {
            "type": "string",
            "description": "Author's email address",
            "example": "jk.rowling@example.com"
          },
          "biography": {
            "type": "string",
            "description": "Author's biography",
            "example": "British author best known for the Harry Potter series"
          },
          "birthDate": {
            "type": "string",
            "format": "date",
            "description": "Author's birth date",
            "example": "1965-07-31"
          },
          "nationality": {
            "type": "string",
            "description": "Author's nationality",
            "example": "British"
          }
        }
      },
      "Book": {
        "type": "object",
        "required": ["title", "authorId", "isbn"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Auto-generated ID"
          },
          "title": {
            "type": "string",
            "description": "Book title",
            "example": "Harry Potter and the Philosopher's Stone"
          },
          "authorId": {
            "type": "string",
            "description": "Author's ID",
            "example": "68853c17591d38453d07889e"
          },
          "isbn": {
            "type": "string",
            "description": "ISBN number",
            "example": "978-0-7475-3269-9"
          },
          "publishedYear": {
            "type": "number",
            "description": "Year of publication",
            "example": 1997
          },
          "genre": {
            "type": "string",
            "description": "Book genre",
            "example": "Fantasy"
          },
          "pages": {
            "type": "number",
            "description": "Number of pages",
            "example": 223
          },
          "publisher": {
            "type": "string",
            "description": "Publisher name",
            "example": "Bloomsbury"
          },
          "language": {
            "type": "string",
            "description": "Book language",
            "example": "English"
          },
          "description": {
            "type": "string",
            "description": "Book description",
            "example": "A young wizard discovers his magical heritage and begins his education at Hogwarts School of Witchcraft and Wizardry"
          },
          "price": {
            "type": "number",
            "description": "Book price",
            "example": 14.99
          },
          "inStock": {
            "type": "boolean",
            "description": "Availability status",
            "example": true
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "message": {
            "type": "string",
            "description": "Detailed error description"
          },
          "details": {
            "type": "string",
            "description": "Validation error details"
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "data": {
            "type": "object",
            "description": "Response data"
          }
        }
      }
    },
    "securitySchemes": {
      "sessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "library.sid",
        "description": "Session-based authentication using cookies"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Authors",
      "description": "Author management operations"
    },
    {
      "name": "Books",
      "description": "Book management operations"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Information",
        "description": "Get basic information about the Library Management API",
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Library Management API v2.0"
                    },
                    "documentation": {
                      "type": "string",
                      "example": "/api-docs"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "endpoints": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check the health status of the API and database connection",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "number"
                    },
                    "database": {
                      "type": "string",
                      "example": "connected"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "userId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "username": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "summary": "Get user profile (Protected)",
        "tags": ["Authentication"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/authors": {
      "get": {
        "summary": "Get all authors",
        "tags": ["Authors"],
        "responses": {
          "200": {
            "description": "List of all authors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new author (Protected)",
        "tags": ["Authors"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Author created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Author created successfully"
                    },
                    "authorId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/authors/{id}": {
      "get": {
        "summary": "Get author by ID",
        "tags": ["Authors"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Author ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Author details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          },
          "404": {
            "description": "Author not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an author (Protected)",
        "tags": ["Authors"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Author ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Author updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Author updated successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Author not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an author (Protected)",
        "tags": ["Authors"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Author ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Author deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Author deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Author not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "summary": "Get all books",
        "tags": ["Books"],
        "responses": {
          "200": {
            "description": "List of all books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new book (Protected)",
        "tags": ["Books"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Book created successfully"
                    },
                    "bookId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Get book by ID",
        "tags": ["Books"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Book details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a book (Protected)",
        "tags": ["Books"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Book ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Book updated successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a book (Protected)",
        "tags": ["Books"],
        "security": [
          {
            "sessionAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Book ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Book deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Book not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}